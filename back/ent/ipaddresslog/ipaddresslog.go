// Code generated by ent, DO NOT EDIT.

package ipaddresslog

import (
	"time"
)

const (
	// Label holds the string label denoting the ipaddresslog type in the database.
	Label = "ip_address_log"
	// FieldID holds the string denoting the id field in the database.
	FieldID = "id"
	// FieldIPAddress holds the string denoting the ip_address field in the database.
	FieldIPAddress = "ip_address"
	// FieldCreatedAt holds the string denoting the created_at field in the database.
	FieldCreatedAt = "created_at"
	// FieldUpdatedAt holds the string denoting the updated_at field in the database.
	FieldUpdatedAt = "updated_at"
	// EdgePostID holds the string denoting the post_id edge name in mutations.
	EdgePostID = "post_id"
	// Table holds the table name of the ipaddresslog in the database.
	Table = "ip_address_logs"
	// PostIDTable is the table that holds the post_id relation/edge.
	PostIDTable = "ip_address_logs"
	// PostIDInverseTable is the table name for the Post entity.
	// It exists in this package in order to avoid circular dependency with the "post" package.
	PostIDInverseTable = "posts"
	// PostIDColumn is the table column denoting the post_id relation/edge.
	PostIDColumn = "post_ip_address_log"
)

// Columns holds all SQL columns for ipaddresslog fields.
var Columns = []string{
	FieldID,
	FieldIPAddress,
	FieldCreatedAt,
	FieldUpdatedAt,
}

// ForeignKeys holds the SQL foreign-keys that are owned by the "ip_address_logs"
// table and are not defined as standalone fields in the schema.
var ForeignKeys = []string{
	"post_ip_address_log",
}

// ValidColumn reports if the column name is valid (part of the table columns).
func ValidColumn(column string) bool {
	for i := range Columns {
		if column == Columns[i] {
			return true
		}
	}
	for i := range ForeignKeys {
		if column == ForeignKeys[i] {
			return true
		}
	}
	return false
}

var (
	// IPAddressValidator is a validator for the "ip_address" field. It is called by the builders before save.
	IPAddressValidator func(string) error
	// DefaultCreatedAt holds the default value on creation for the "created_at" field.
	DefaultCreatedAt func() time.Time
	// DefaultUpdatedAt holds the default value on creation for the "updated_at" field.
	DefaultUpdatedAt func() time.Time
	// UpdateDefaultUpdatedAt holds the default value on update for the "updated_at" field.
	UpdateDefaultUpdatedAt func() time.Time
	// DefaultID holds the default value on creation for the "id" field.
	DefaultID func() string
)
